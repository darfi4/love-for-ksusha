document.addEventListener('DOMContentLoaded', function() {
    const blackScreen = document.getElementById('blackScreen');
    const heartScene = document.getElementById('heartScene');
    const loveScene = document.getElementById('loveScene');
    const heart3d = document.getElementById('heart3d');
    const cursorDot = document.querySelector('.cursor-dot');
    const loveCanvas = document.getElementById('loveCanvas');
    const loveText = document.getElementById('loveText');
    const floatingHearts = document.querySelector('.floating-hearts');
    const loveSound = document.getElementById('loveSound');

    const ctx = loveCanvas.getContext('2d');
    let mouseX = 0, mouseY = 0;
    let particles = [];
    let isHeartHovered = false;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ canvas
    function setupCanvas() {
        loveCanvas.width = window.innerWidth;
        loveCanvas.height = window.innerHeight;
    }

    // –ö–∞—Å—Ç–æ–º–Ω—ã–π –∫—É—Ä—Å–æ—Ä
    document.addEventListener('mousemove', (e) => {
        mouseX = e.clientX;
        mouseY = e.clientY;
        cursorDot.style.left = mouseX + 'px';
        cursorDot.style.top = mouseY + 'px';
        
        if (!heartScene.classList.contains('hidden')) {
            updateHeartRotation();
        }
    });

    // 3D –≤—Ä–∞—â–µ–Ω–∏–µ —Å–µ—Ä–¥—Ü–∞
    function updateHeartRotation() {
        const heartRect = heart3d.getBoundingClientRect();
        const heartX = heartRect.left + heartRect.width / 2;
        const heartY = heartRect.top + heartRect.height / 2;
        
        const rotateY = (mouseX - heartX) * 0.1;
        const rotateX = -(mouseY - heartY) * 0.1;
        
        heart3d.style.transform = `rotateY(${rotateY}deg) rotateX(${rotateX}deg)`;
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–¥—Ü–µ
        const distance = Math.sqrt(Math.pow(mouseX - heartX, 2) + Math.pow(mouseY - heartY, 2));
        isHeartHovered = distance < 100;
        
        if (isHeartHovered) {
            heart3d.classList.add('glow');
            cursorDot.style.transform = 'translate(-50%, -50%) scale(2)';
            cursorDot.style.background = '#ff69b4';
        } else {
            heart3d.classList.remove('glow');
            cursorDot.style.transform = 'translate(-50%, -50%) scale(1)';
            cursorDot.style.background = '#ff0080';
        }
    }

    // –ù–∞–∂–∞—Ç–∏–µ –ø—Ä–æ–±–µ–ª–∞
    document.addEventListener('keydown', (e) => {
        if (e.code === 'Space' && !blackScreen.classList.contains('hidden')) {
            e.preventDefault();
            showHeartScene();
        }
    });

    // –ö–ª–∏–∫ –ø–æ —á—ë—Ä–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
    blackScreen.addEventListener('click', showHeartScene);

    function showHeartScene() {
        blackScreen.classList.add('hidden');
        heartScene.classList.remove('hidden');
        heart3d.classList.add('pulse');
    }

    // –ö–ª–∏–∫ –ø–æ —Å–µ—Ä–¥—Ü—É
    heart3d.addEventListener('click', startLoveEffects);

    const loveMessages = [
        "–ö—Å—é—à–∞, —Ç—ã –º–æ—ë –≤—Å—ë üíñ",
        "–ö–∞–∂–¥–∞—è —Ç–≤–æ—è —É–ª—ã–±–∫–∞ - —ç—Ç–æ —Å–æ–ª–Ω—Ü–µ –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏ ‚òÄÔ∏è",
        "–¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–µ üå∏",
        "–ú–æ—ë —Å–µ—Ä–¥—Ü–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —Ç–µ–±–µ –Ω–∞–≤—Å–µ–≥–¥–∞ üíû",
        "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö —è –≤–∏–∂—É –Ω–∞—à–µ –±—É–¥—É—â–µ–µ ‚ú®",
        "–¢—ã —Å–∞–º–∞—è –ª—É—á—à–∞—è –¥–µ–≤—É—à–∫–∞ –Ω–∞ —Å–≤–µ—Ç–µ üåü",
        "–Ø —Å—á–∞—Å—Ç–ª–∏–≤, —á—Ç–æ —Ç—ã –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏ üí´",
        "–õ—é–±–æ–≤—å –∫ —Ç–µ–±–µ —Ä–∞—Å—Ç—ë—Ç —Å –∫–∞–∂–¥—ã–º –¥–Ω—ë–º üåπ",
        "–¢—ã –º–æ—è —Å–∞–º–∞—è –±–æ–ª—å—à–∞—è –º–µ—á—Ç–∞ üíù",
        "–í–º–µ—Å—Ç–µ –º—ã —Å–æ–∑–¥–∞—ë–º –Ω–∞—à—É –∏—Å—Ç–æ—Ä–∏—é üíë",
        "–¢—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å –º–µ–Ω—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ üåà",
        "–ö–∞–∂–¥–∞—è –º–∏–Ω—É—Ç–∞ —Å —Ç–æ–±–æ–π - –ø–æ–¥–∞—Ä–æ–∫ üéÅ",
        "–¢—ã —Å–∞–º–∞—è –∫—Ä–∞—Å–∏–≤–∞—è üíê",
        "–ú–æ—è –ª—é–±–æ–≤—å –∫ —Ç–µ–±–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–∞ ‚ôæÔ∏è",
        "–¢—ã - –ø—Ä–∏—á–∏–Ω–∞ –º–æ–µ–≥–æ —Å—á–∞—Å—Ç—å—è üòä"
    ];

    function startLoveEffects() {
        heartScene.classList.add('hidden');
        loveScene.classList.remove('hidden');
        
        setupCanvas();
        loveSound.play();
        
        startParticleSystem();
        showLoveMessages();
        createFloatingHearts();
    }

    // –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∏—Ü
    function startParticleSystem() {
        particles = [];
        
        function createParticle() {
            particles.push({
                x: Math.random() * loveCanvas.width,
                y: Math.random() * loveCanvas.height,
                size: Math.random() * 3 + 1,
                speedX: (Math.random() - 0.5) * 2,
                speedY: (Math.random() - 0.5) * 2,
                color: `hsl(${Math.random() * 360}, 100%, 70%)`
            });
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã
        for (let i = 0; i < 100; i++) {
            createParticle();
        }

        function animateParticles() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
            ctx.fillRect(0, 0, loveCanvas.width, loveCanvas.height);
            
            particles.forEach((particle, index) => {
                ctx.beginPath();
                ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);
                ctx.fillStyle = particle.color;
                ctx.fill();
                
                particle.x += particle.speedX;
                particle.y += particle.speedY;
                
                // –û—Ç—Å–∫–∞–∫–∏–≤–∞–Ω–∏–µ –æ—Ç –≥—Ä–∞–Ω–∏—Ü
                if (particle.x < 0 || particle.x > loveCanvas.width) particle.speedX *= -1;
                if (particle.y < 0 || particle.y > loveCanvas.height) particle.speedY *= -1;
                
                // –ò–Ω–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —á–∞—Å—Ç–∏—Ü—ã
                if (Math.random() < 0.02) {
                    createParticle();
                }
                
                // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —á–∞—Å—Ç–∏—Ü—ã
                if (particles.length > 200) {
                    particles.splice(index, 1);
                }
            });
            
            requestAnimationFrame(animateParticles);
        }
        
        animateParticles();
    }

    // –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π
    function showLoveMessages() {
        let messageIndex = 0;
        
        function showNextMessage() {
            if (messageIndex < loveMessages.length) {
                loveText.textContent = loveMessages[messageIndex];
                loveText.style.opacity = '1';
                
                setTimeout(() => {
                    loveText.style.opacity = '0';
                    setTimeout(() => {
                        messageIndex++;
                        showNextMessage();
                    }, 500);
                }, 3000);
            } else {
                // –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                loveText.innerHTML = "–ö—Å—é—à–∞, —è —Ç–µ–±—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ª—é–±–ª—é!<br>–¢—ã —Å–∞–º–æ–µ –¥–æ—Ä–æ–≥–æ–µ, —á—Ç–æ –µ—Å—Ç—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏ üíñ";
                loveText.style.opacity = '1';
                loveText.style.fontSize = '42px';
            }
        }
        
        showNextMessage();
    }

    // –ü–ª–∞–≤–∞—é—â–∏–µ —Å–µ—Ä–¥—Ü–∞
    function createFloatingHearts() {
        setInterval(() => {
            const heart = document.createElement('div');
            heart.className = 'floating-heart';
            heart.textContent = 'üíñ';
            heart.style.left = Math.random() * 100 + '%';
            heart.style.color = `hsl(${Math.random() * 360}, 100%, 70%)`;
            heart.style.animationDuration = (Math.random() * 3 + 4) + 's';
            
            floatingHearts.appendChild(heart);
            
            setTimeout(() => {
                heart.remove();
            }, 6000);
        }, 300);
    }

    // –†–µ—Å–∞–π–∑ canvas
    window.addEventListener('resize', () => {
        if (!loveScene.classList.contains('hidden')) {
            setupCanvas();
        }
    });
});